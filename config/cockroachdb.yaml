# From AWX Survey/Extra-Vars

# deployment_id: ""
# desired_regions: []
# desired_disk_size: 100
# desired_count: 1
# desired_cpus: 4
# cockroachdb_version: latest
# cockroachdb_cache: '.25'
# cockroachdb_max_sql_memory: '.25'
# cockroachdb_enterprise_license: 

# From inventory:

# regions
# instances

##################
# INFRASTRUCTURE #
##################

# VM INSTANCES
deployment:
  - cluster_name: "{{ deployment_id }}"
    inventory_groups:
      - cockroachdb
    instance:
      cpu: "{{ desired_cpus }}"
      # mem:
    role: workshop
    tags:
      Name: "{{ deployment_id }}-cockroach"
    volumes:
      os:
        size: 10
        type: standard_ssd
      data:
        - size: "{{ desired_disk_size | default(100) }}"
          type: local_ssd
          delete_on_termination: true
    groups:
      # AWS
      - import: "{{ regions.aws.us_east_1.a }}"
        exact_count: "{{ ('aws_us_east_1a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.aws.us_east_1.b }}"
        exact_count: "{{ ('aws_us_east_1b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.aws.us_east_1.c }}"
        exact_count: "{{ ('aws_us_east_1c' in desired_regions) | ternary(desired_count, 0) }}"
      
      - import: "{{ regions.aws.us_east_2.a }}"
        exact_count: "{{ ('aws_us_east_2a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.aws.us_east_2.b }}"
        exact_count: "{{ ('aws_us_east_2b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.aws.us_east_2.c }}"
        exact_count: "{{ ('aws_us_east_2c' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.aws.us_west_2.a }}"
        exact_count: "{{ ('aws_us_west_2a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.aws.us_west_2.b }}"
        exact_count: "{{ ('aws_us_west_2b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.aws.us_west_2.c }}"
        exact_count: "{{ ('aws_us_west_2c' in desired_regions) | ternary(desired_count, 0) }}"
      
      - import: "{{ regions.aws.eu_west_3.a }}"
        exact_count: "{{ ('aws_us_west_3a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.aws.eu_west_3.b }}"
        exact_count: "{{ ('aws_us_west_3b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.aws.eu_west_3.c }}"
        exact_count: "{{ ('aws_us_west_3c' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.aws.eu_west_1.a }}"
        exact_count: "{{ ('aws_eu_west_1a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.aws.eu_west_1.b }}"
        exact_count: "{{ ('aws_eu_west_1b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.aws.eu_west_1.c }}"
        exact_count: "{{ ('aws_eu_west_1c' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.aws.ap_northeast_1.a }}"
        exact_count: "{{ ('aws_ap_northeast_1a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.aws.ap_northeast_1.b }}"
        exact_count: "{{ ('aws_ap_northeast_1b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.aws.ap_northeast_1.c }}"
        exact_count: "{{ ('aws_ap_northeast_1c' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.aws.ap_south_1.a }}"
        exact_count: "{{ ('aws_ap_south_1a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.aws.ap_south_1.a }}"
        exact_count: "{{ ('aws_ap_south_1b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.aws.ap_south_1.a }}"
        exact_count: "{{ ('aws_ap_south_1c' in desired_regions) | ternary(desired_count, 0) }}"

      # GCP
      - import: "{{ regions.gcp.us_east1.d }}"
        exact_count: "{{ ('gcp_us_east1_d' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.us_east1.b }}"
        exact_count: "{{ ('gcp_us_east1_b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.us_east1.c }}"
        exact_count: "{{ ('gcp_us_east1_c' in desired_regions) | ternary(desired_count, 0) }}"
      
      - import: "{{ regions.gcp.us_east4.a }}"
        exact_count: "{{ ('gcp_us_east4_a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.us_east4.b }}"
        exact_count: "{{ ('gcp_us_east4_b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.us_east4.c }}"
        exact_count: "{{ ('gcp_us_east4_c' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.gcp.us_central1.a }}"
        exact_count: "{{ ('gcp_us_central1_a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.us_central1.b }}"
        exact_count: "{{ ('gcp_us_central1_b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.us_central1.c }}"
        exact_count: "{{ ('gcp_us_central1_c' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.us_central1.f }}"
        exact_count: "{{ ('gcp_us_central1_f' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.gcp.us_west1.a }}"
        exact_count: "{{ ('gcp_us_west1_a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.us_west1.b }}"
        exact_count: "{{ ('gcp_us_west1_b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.us_west1.c }}"
        exact_count: "{{ ('gcp_us_west1_c' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.gcp.us_west4.a }}"
        exact_count: "{{ ('gcp_us_west4_a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.us_west4.b }}"
        exact_count: "{{ ('gcp_us_west4_b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.us_west4.c }}"
        exact_count: "{{ ('gcp_us_west4_c' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.gcp.europe_north1.a }}"
        exact_count: "{{ ('gcp_europe_north1_a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.europe_north1.b }}"
        exact_count: "{{ ('gcp_europe_north1_b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.europe_north1.c }}"
        exact_count: "{{ ('gcp_europe_north1_c' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.gcp.europe_west2.a }}"
        exact_count: "{{ ('gcp_europe_west2_a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.europe_west2.b }}"
        exact_count: "{{ ('gcp_europe_west2_b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.europe_west2.c }}"
        exact_count: "{{ ('gcp_europe_west2_c' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.gcp.europe_west1.a }}"
        exact_count: "{{ ('gcp_europe_west1_a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.europe_west1.b }}"
        exact_count: "{{ ('gcp_europe_west1_b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.europe_west1.c }}"
        exact_count: "{{ ('gcp_europe_west1_c' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.gcp.australia_southeast1.a }}"
        exact_count: "{{ ('gcp_australia_southeast1_a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.australia_southeast1.b }}"
        exact_count: "{{ ('gcp_australia_southeast1_b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.australia_southeast1.c }}"
        exact_count: "{{ ('gcp_australia_southeast1_c' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.gcp.asia_southeast2.a }}"
        exact_count: "{{ ('gcp_asia_southeast2_a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.asia_southeast2.b }}"
        exact_count: "{{ ('gcp_asia_southeast2_b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.asia_southeast2.c }}"
        exact_count: "{{ ('gcp_asia_southeast2_c' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.gcp.asia_northeast2.a }}"
        exact_count: "{{ ('gcp_asia_northeast2_a' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.asia_northeast2.b }}"
        exact_count: "{{ ('gcp_asia_northeast2_b' in desired_regions) | ternary(desired_count, 0) }}"
      - import: "{{ regions.gcp.asia_northeast2.c }}"
        exact_count: "{{ ('gcp_asia_northeast2_c' in desired_regions) | ternary(desired_count, 0) }}"

      # AZURE
      - import: "{{ regions.azure.eastus.default }}"
        exact_count: "{{ ('azure_eastus_default' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.azure.westeurope.default }}"
        exact_count: "{{ ('azure_westeurope_default' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.azure.francecentral.default }}"
        exact_count: "{{ ('azure_francecentral_default' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.azure.southafricanorth.default }}"
        exact_count: "{{ ('azure_southafricanorth_default' in desired_regions) | ternary(desired_count, 0) }}"

      - import: "{{ regions.azure.koreacentral.default }}"
        exact_count: "{{ ('azure_koreacentral_default' in desired_regions) | ternary(desired_count, 0) }}"
      

##############
#  PLATFORM  #
##############
certificates_organization_name: fabio-org
certificates_dir: &certs
  certs
certificates_usernames: &crdb_client_certs
  - root
  - app
certificates_hosts: "{{ groups['cockroachdb'] }}"
certificates_loadbalancer: "{{ groups['haproxy'] }}"

# COCKROACHDB
cockroachdb_deployment: standard
cockroachdb_secure: no
cockroachdb_krb: no
cockroachdb_krbsrvname: cockroach
cockroachdb_certificates_dir: *certs
cockroachdb_certificates_clients: *crdb_client_certs
# cockroachdb_version: latest
cockroachdb_join:
  - "{{ hostvars[( groups[cluster_name] | intersect(groups['cockroachdb']) )[0]].public_ip }}"
  - "{{ hostvars[( groups[cluster_name] | intersect(groups['cockroachdb']) )[1]].public_ip }}"
  - "{{ hostvars[( groups[cluster_name] | intersect(groups['cockroachdb']) )[2]].public_ip }}"
cockroachdb_sql_port: 26257
cockroachdb_rpc_port: 26357
cockroachdb_http_addr_ip: "0.0.0.0"
cockroachdb_http_addr_port: "8080"
# cockroachdb_cache: '.25'
# cockroachdb_max_sql_memory: '.25'
# the value for below vars are fetched individually for each node from hostvars
# these are variables that must be already available in the Ansible inventory
cockroachdb_locality: "region={{ region | default('') }},zone={{ zone | default('') }}"
cockroachdb_advertise_addr: "{{ public_ip | default('') }}"
# cockroachdb_listen_addr: "{{ public_ip | default('') }}"
# cockroachdb_attrs: "{{ extra_vars.attrs | default('std') }}"
cockroachdb_cluster_organization: Workshop
# cockroachdb_enterprise_license: crl-0-xxxxxxxx
cockroachdb_encryption: no
cockroachdb_encryption_key_old:
cockroachdb_encryption_key_new:

###############
# APPLICATION #
###############

dbusers: []
  # - name: fabio
  #   password: cockroach
  #   is_cert: no
  #   is_admin: yes
  # - name: app
  #   password: null
  #   is_cert: yes
  #   is_admin: yes
